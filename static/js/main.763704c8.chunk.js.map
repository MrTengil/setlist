{"version":3,"sources":["components/ActionButton.module.scss","theme.module.scss","views/styles/Page.module.scss","native.tsx","views/Page.tsx","views/Main.tsx","components/ActionButton.tsx","views/Setlist.tsx","components/NoteLayout.tsx","views/Play.tsx","views/Song.tsx","App.tsx","serviceWorker.ts","index.tsx","components/NoteLayout.module.scss"],"names":["module","exports","View","children","props","Text","Input","className","styles","Page","title","headerElement","editable","body","value","style","margin","marginLeft","Main","ActionButton","onClick","size","inverted","e","placeholderSetlist","songName","notes","Setlist","setlistName","useParams","history","useHistory","push","map","song","to","encodeURIComponent","NoteLayout","edit","wrapper","notesPosition","noteWrapper","note","console","log","actionWrapper","Play","songNumber","decodeURIComponent","Song","App","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.763704c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"ActionButton_Input__3HuPX\",\"ActionButton\":\"ActionButton_ActionButton__3ZsXO\",\"inverted\":\"ActionButton_inverted__eClMW\",\"sm\":\"ActionButton_sm__3VrHe\",\"md\":\"ActionButton_md__35tHv\",\"lg\":\"ActionButton_lg__2ZNgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"theme_Input__303WR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Page_Input__1yI6L\",\"body\":\"Page_body__3av0i\"};","import React, { FC } from \"react\";\nimport styles from \"./theme.module.scss\";\n\n// Wrappers for native elements\n\nconst View: FC<any> = ({ children, ...props }) => (\n  <div {...props}>{children}</div>\n);\n\nconst Text: FC<any> = ({ children, ...props }) => (\n  <span {...props}>{children}</span>\n);\n\nconst Input: FC<any> = props => <input className={styles.Input} {...props} />;\n\nexport { View, Text, Input };\n","import { View, Input } from \"../native\";\nimport React, { FC } from \"react\";\nimport styles from \"./styles/Page.module.scss\";\n\ninterface PageProps {\n  title?: string;\n  headerElement?: React.ReactElement;\n  editable?: boolean;\n}\n\nexport const Page: FC<React.PropsWithChildren<PageProps>> = ({\n  title,\n  headerElement,\n  children,\n  editable = true\n}) => {\n  return (\n    <View className={styles.body}>\n      <header>\n        {editable ? (\n          <Input value={title || \"\"} />\n        ) : (\n          <h1 style={{ margin: \"auto\", marginLeft: \"10px\" }}>{title}</h1>\n        )}\n        {headerElement}\n      </header>\n\n      {children}\n    </View>\n  );\n};\n","import React from \"react\";\nimport { Page } from \"./Page\";\nimport { Text } from \"../native\";\n\nexport const Main = () => (\n  <Page\n    editable={false}\n    title=\"Setlist\"\n    headerElement={\n      <Text\n        style={{\n          margin: \"auto\"\n        }}\n      >\n        Search\n      </Text>\n    }\n  />\n);\n","import React, { FC } from \"react\";\nimport { View } from \"../native\";\nimport styles from \"./ActionButton.module.scss\";\n\ninterface Props {\n  size: \"sm\" | \"md\" | \"lg\";\n  onClick: (e: Event) => void;\n  onPressAndHold?: Function;\n  className?: string;\n  style?: Object;\n  inverted?: boolean;\n}\n\nexport const ActionButton: FC<React.PropsWithChildren<Props>> = ({\n  children,\n  onClick,\n  size,\n  className,\n  style,\n  inverted\n}) => {\n  return (\n    <View\n      style={style}\n      onClick={(e: Event) => onClick(e)}\n      className={\n        styles.ActionButton +\n        \" \" +\n        styles[size] +\n        \" \" +\n        className +\n        \" \" +\n        (inverted && styles.inverted)\n      }\n    >\n      {children}\n    </View>\n  );\n};\n","import React from \"react\";\nimport { Page } from \"./Page\";\nimport { useParams, Link, useHistory } from \"react-router-dom\";\nimport { View } from \"../native\";\nimport { ActionButton } from \"../components/ActionButton\";\n\nexport const placeholderSetlist = [\n  { songName: \"A whole new world\", notes: [\"D4\", \"E4\", \"A5\", \"B5\"] },\n  { songName: \"You give love a bad name\", notes: [\"D4\", \"E4\", \"A5\", \"B5\"] },\n  { songName: \"Nessum dorma\", notes: [\"D4\", \"E4\", \"A5\", \"B5\"] },\n  { songName: \"BumbibjÃ¶rnarna\", notes: [\"D4\", \"E4\", \"A5\", \"B5\"] }\n];\n\nexport const Setlist = () => {\n  const { setlistName } = useParams();\n  const history = useHistory();\n  return (\n    <Page\n      title={setlistName}\n      headerElement={\n        <ActionButton\n          inverted\n          style={{ margin: \"5px\" }}\n          size=\"lg\"\n          onClick={() => history.push(`/setlist/${setlistName}/play/0`)}\n        >\n          Play\n        </ActionButton>\n      }\n    >\n      {placeholderSetlist.map(song => (\n        <View>\n          <Link to={`/song/${encodeURIComponent(song.songName)}`}>\n            {song.songName}\n          </Link>\n        </View>\n      ))}\n    </Page>\n  );\n};\n","import React, { FC } from \"react\";\nimport { View } from \"../native\";\nimport { ActionButton } from \"./ActionButton\";\nimport styles from \"./NoteLayout.module.scss\";\nimport { placeholderSetlist } from \"../views/Setlist\";\n\ninterface Props {\n  edit: boolean;\n}\n\nexport const NoteLayout: FC<Props> = ({ edit }) => {\n  const handleClick = () => {\n    console.log(\"clicked\");\n  };\n  return (\n    <View className={styles.wrapper}>\n      <View className={styles.notesPosition}>\n        <View className={styles.noteWrapper}>\n          {placeholderSetlist[0].notes.map(note => (\n            <ActionButton\n              style={{ margin: \"5px 0\" }}\n              size=\"lg\"\n              onClick={() => console.log(\"clicked\")}\n            >\n              {note}\n            </ActionButton>\n          ))}\n        </View>\n      </View>\n      <View className={styles.actionWrapper}>\n        <ActionButton inverted size=\"lg\" onClick={handleClick}>\n          {edit ? \"+\" : \"Play\"}\n        </ActionButton>\n      </View>\n    </View>\n  );\n};\n","import React from \"react\";\nimport { Page } from \"./Page\";\nimport { NoteLayout } from \"../components/NoteLayout\";\nimport { useParams } from \"react-router-dom\";\n\nexport const Play = () => {\n  const { songNumber } = useParams();\n  return (\n    <Page editable={false} title={decodeURIComponent(songNumber || \"\")}>\n      <NoteLayout edit={false} />\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { Page } from \"./Page\";\nimport { useParams } from \"react-router-dom\";\nimport { NoteLayout } from \"../components/NoteLayout\";\n\nexport const Song = () => {\n  const { songName } = useParams();\n\n  return (\n    <Page title={decodeURIComponent(songName || \"\")}>\n      <NoteLayout edit />\n    </Page>\n  );\n};\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { Main, Play, Setlist, Song } from \"./views\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/setlist/:setlistName/play/:songNumber\">\n          <Play />\n        </Route>\n        <Route path=\"/setlist/:setlistName\">\n          <Setlist />\n        </Route>\n        <Route path=\"/song/:songName\">\n          <Song />\n        </Route>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"NoteLayout_wrapper__1cfAi\",\"actionWrapper\":\"NoteLayout_actionWrapper__3MF3l\",\"noteWrapper\":\"NoteLayout_noteWrapper__2DqsI\",\"notesPosition\":\"NoteLayout_notesPosition__4Dsp1\"};"],"sourceRoot":""}